struct VSInput {
  float3 position : POSITION;
};

struct FSInput {
  float4 position : SV_Position;
};

struct UBO {
  float4x4 projection;
  float4x4 view;
  float4x4 light_space_matrix;
  float4x4 transforms[4];
  float4   light_pos;
  float4   view_pos;
};

struct PushConst {
  uint mat_index;
};

AC_PUSH_CONSTANT(PushConst, pc);

ConstantBuffer<UBO> g_ubo : register(b0, space0);

FSInput
vs(VSInput input)
{
  float4x4 transform = g_ubo.transforms[pc.mat_index];
  float4x4 m = mul(g_ubo.light_space_matrix, transform);

  FSInput output;
  output.position = mul(m, float4(input.position, 1.0));

  return output;
}
